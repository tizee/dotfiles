#!/usr/bin/env python3
#vim: ft=python
# -*- coding: utf-8 -*-

# Decode binary encoded string into string
# Or encode string in given encoding binary string

# It's useful to make these printed binary string less nerdy and more human
# friendly.
# Why not use encrypted binary string as an easter egg somewhere in your
# codebase.

import sys

def main(argv = None):
    if len(argv) <= 1:
        # display help info
        print("""usage: bstr [-]<encoding-format> [string]
    available formats:
    gbk
    utf-8
    ...
    and other formats of standard encodings

    use -<format> to convert string to binary string""")
        return 0
    fmt = argv[1]
    if fmt[0] != '-':
        for byte in argv[2:]:
            try:
                print("{} in {} encoding -> {}".format(byte,fmt,binary2str(byte,fmt)))
            except UnicodeError:
                print("error encoding" )
                return 1
            except LookupError:
                print("format {} is not supported ".format(fmt))
                return 1
    else:
        fmt = fmt[1:]
        for words in argv[2:]:
            try:
                for word in words:
                    print("{} in {} encoding -> {}".format(word,fmt,str2binary(word,fmt)))
            except UnicodeError:
                print("error encoding")
                return 1
            except LookupError:
                print("format {} is not supported ".format(fmt))
                return 1

# binary string to character str
def binary2str(s, fmt='utf-8'):
    return bytes.fromhex(hex(int(s,2))[2:]).decode(encoding=fmt)

def str2binary(s, fmt='utf-8'):
    return '\n'.join(''.join(format(byte,'08b') for byte in bytes(word, fmt)) for word in s)

def test():
    def expect(a,b):
        assert a == b
    expect('1100010011100011',str2binary('你','gbk'))
    expect('你',binary2str('1100010011100011','gbk'))
    expect('1100010011100011',str2binary('你','cp936'))
    expect('你',binary2str('1100010011100011','cp936'))
    expect('111001001011110110100000',str2binary('你','utf-8'))
    expect('你',binary2str('111001001011110110100000','utf-8'))
    try:
        expect('你',binary2str('1100010011100011','unkown'))
    except LookupError:
        print("unkown format")
        pass
    print("test passed")

if __name__ == '__main__':
    # test()
    main(sys.argv)
