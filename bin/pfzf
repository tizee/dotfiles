#!/usr/bin/env zsh
set -euo pipefail

# Default depth is 1
DEPTH=1

# Parse arguments
if [ "$#" -eq 0 ]; then
  echo "Usage: $0 <codebase-directory> [depth]"
  exit 1
elif [ "$#" -eq 1 ]; then
  CODEBASE="$1"
elif [ "$#" -eq 2 ]; then
  CODEBASE="$1"
  DEPTH="$2"
fi

# Verify directory exists
if [ ! -d "$CODEBASE" ]; then
  echo "Error: Directory '$CODEBASE' does not exist."
  exit 1
fi

# Store original directory
ORIGINAL_DIR=$(pwd)

# Navigate to codebase
cd "$CODEBASE" || { echo "Failed to access $CODEBASE"; exit 1; }

# Check if there are files to select
if [ -z "$(find . -maxdepth "$DEPTH" -type f 2>/dev/null)" ]; then
  echo "No files found at depth $DEPTH in $CODEBASE."
  exit 1
fi

# Use find and sed to remove ./ prefix before passing to fzf
selected=$(find . -maxdepth "$DEPTH" -type f | sed 's|^\./||' | fzf --multi --preview 'bat --style=numbers --color=always {} 2>/dev/null || cat {}' --prompt="Select files (TAB for multi-select): ")

# Check if selection was made
if [ -z "$selected" ]; then
  echo "No files selected."
  cd "$ORIGINAL_DIR"
  exit 0
fi

# Process selected files (no need to remove ./ prefix now)
files=$(echo "$selected" | paste -sd ',' -)

# Run code2prompt with selected files
echo "Running code2prompt on selected files..."
code2prompt -i "$files" "$CODEBASE"

# Return to original directory
cd "$ORIGINAL_DIR"
