# Ruff configuration file
# Config for Python linting and formatting

# Same as Black
line-length = 88

# Target Python 3.10+ (for modern type union syntax)
target-version = "py310"

[lint]
# Enable all rules by default
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "SLF", # flake8-self
    "S",   # flake8-bandit
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "EM",  # flake8-errmsg
    "EXE", # flake8-executable
    "FA",  # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "G",   # flake8-logging-format
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "PT",  # flake8-pytest-style
    "RSE", # flake8-raise
    "TCH", # flake8-type-checking
    "INT", # flake8-gettext
    "ERA", # eradicate
    "PD",  # pandas-vet
    "PGH", # pygrep-hooks
    "PL",  # Pylint
    "TRY", # tryceratops
    "NPY", # NumPy-specific rules
    "AIR", # Airflow
    "PERF", # Perflint
    "FURB", # refurb
    "LOG", # flake8-logging
    "RUF", # Ruff-specific rules
]

# Ignore specific rules
ignore = [
    "E501",   # Line too long (handled by formatter)
    "S101",   # Use of assert
    "S110",   # try-except-pass (intentional for defensive programming)
    "S603",   # subprocess call (needed for notifications and system detection)
    "S607",   # partial executable path (acceptable for system commands)
    "ARG001", # Unused function argument
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
    "TRY003", # Avoid specifying long messages outside exception class
    "TRY300", # Consider moving to else block (current structure is clearer)
    "EM101",  # Exception must not use a string literal, assign to variable first
    "EM102",  # Exception must not use an f-string literal, assign to variable first
]

# Allow autofix for all enabled rules
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.per-file-ignores]
# Allow print statements in scripts
"*.py" = ["T201"]


[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = 20
