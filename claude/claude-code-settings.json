{
  "env": {
    "CLAUDE_CODE_DISABLE_NONESSENTIAL_TRAFFIC": true,
    "HTTP_PROXY": "http://127.0.0.1:1080",
    "HTTPS_PROXY": "http://127.0.0.1:1080",
    "BASH_DEFAULT_TIMEOUT_MS": 60000,
    "BASH_MAX_TIMEOUT_MS": 300000,
    "CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR": true,
    "DISABLE_NON_ESSENTIAL_MODEL_CALLS": 1
  },
  "includeCoAuthoredBy": false,
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "python3 ~/.claude/hooks/validate-commands.py"
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit|Read",
        "hooks": [
          {
            "type": "command",
            "command": "python3 ~/.claude/hooks/validate-files.py"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "python3 ~/.claude/hooks/operation-logger.py"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "python3 ~/.claude/hooks/notification-handler.py"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "python3 ~/.claude/hooks/stop-handler.py"
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "python3 ~/.claude/hooks/subagent-stop-handler.py"
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "python3 ~/.claude/hooks/pre-compact-handler.py"
          }
        ]
      }
    ]
  },
  "permissions": {
    "allow": [
      "Bash(sg:*)",
      "Bash(ast-grep:*)",
      "Bash(fd:*)",
      "Bash(which:*)",
      "Bash(ls:*)",
      "Bash(rg:*)",
      "TodoWrite",
      "TodoRead"
    ],
    "deny": [
      "Bash(rm -rf:*)",
      "Bash(sudo:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Task"
    ]
  }
}
